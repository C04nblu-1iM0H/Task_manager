!function(){"use strict";const e=["black","yellow","blue","green","pink"],t="afterBegin",n="beforeEnd",a=e=>{const t=document.createElement("div");return t.innerHTML=e,t},l=(e,a,l)=>{switch(a){case t:e.prepend(l);break;case n:e.append(l)}},r=["Изучить теорию","Сделать домашку","Пройти интенсив на соточку"],s={mo:!1,tu:!1,we:!1,th:!1,fr:!1,sa:!1,su:!1},i=["homework","theory","practice","intensive","keks"],c=["January","February","March","April","May","June","July","August","September","October","November","December"],o=e=>{var t;return e[(0,t=e.length,0+Math.floor(t*Math.random()))]},_=()=>{const e=new Date;return[`${Math.random()>.5?e.getDate()+Math.floor(12*Math.random()):e.getDate()-Math.floor(12*Math.random())} ${c[e.getMonth()]}`,(e=>{const[t,n]=e.split(":");return t-12>0?`${t-12}:${n} PM`:`${t}:${n} AM`})(`${e.getHours()}:${e.getMinutes()}`)]},d=()=>{return{description:o(r),dueDate:_(),repeatingDays:s,tags:new Set((t=i,t.filter((()=>Math.random()>.5)).slice(0,3))),isFavorite:Math.random()>.5,isArchive:Math.random()>.5,color:o(e)};var t},m=e=>new Array(e).fill("").map(d),u=e=>`\n        ${(e=>{const{description:t,dueDate:n,tags:a,isArchive:l,isFavorite:r,color:s}=e,[i,o]=n,_=[...a],[d]=i.split(" "),m=(new Date).getDate(),[u,h]=(e=>{const t=(new Date).getFullYear(),n=(new Date).getMonth(),a=((e,t)=>new Date(t,e,0).getDate())(n,t);let[l,r]=e.split(" ");return l>a?(l-=a,r=c[n+1]||c[0]):l<1&&(l=a-Math.abs(l),r=c[n-1]||c[0]),[l,r]})(i);return`\n        <article class="card card--${s} ${m<d?Math.random()>.5?"card--repeat":"":"card--deadline"}">\n            <div class="card__form">\n                <div class="card__inner">\n                    <div class="card__control">\n                        <button type="button" class="card__btn card__btn--edit">\n                            edit\n                        </button>\n                        <button type="button" class="card__btn card__btn--archive  ${l?"card__btn--disabled":""}">\n                            archive\n                        </button>\n                        <button type="button" class="card__btn card__btn--favorites ${r?"card__btn--disabled":""}">\n                            favorites\n                        </button>\n                    </div>\n\n                    <div class="card__color-bar">\n                        <svg class="card__color-bar-wave" width="100%" height="10">\n                            <use xlink:href="#wave"></use>\n                        </svg>\n                    </div>\n\n                    <div class="card__textarea-wrap">\n                        <p class="card__text">${t}</p>\n                    </div>\n\n                <div class="card__settings">\n                    <div class="card__details">\n                    <div class="card__dates">\n                        <div class="card__date-deadline">\n                        <p class="card__input-deadline-wrap">\n                            <span class="card__date">${u} ${h}</span>\n                            <span class="card__time">${o}</span>\n                        </p>\n                        </div>\n                    </div>\n\n                    <div class="card__hashtag">\n                        <div class="card__hashtag-list">\n                        ${_.map((e=>`\n                                <span class="card__hashtag-inner">\n                                    <span class="card__hashtag-name">\n                                        #${e}\n                                    </span>\n                                </span> \n                            `)).join(" ")}\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </article>\n    `})(e)}\n    `;class h{constructor(e){this._element=null,this._card=e}getTemplate(){return u(this._card)}getElement(){return this._element||(this._element=a(this.getTemplate())),this._element}removeElement(){this._element=null}}const p=new class{constructor(){this._element=null}getTemplate(){return'\n        <section class="board container">\n            <div class="board__filter-list">\n                <a href="#" class="board__filter">SORT BY DEFAULT</a>\n                <a href="#" class="board__filter">SORT BY DATE up</a>\n                <a href="#" class="board__filter">SORT BY DATE down</a>\n            </div>\n            <div class="board__tasks"></div>\n        </section>\n    '}getElement(){return this._element||(this._element=a(this.getTemplate())),this._element}removeElement(){this._element=null}},v=(new class{constructor(){this._element=null}getTemplate(){return'\n        <button class="load-more" type="button">load more</button>\n    '}getElement(){return this._element||(this._element=a(this.getTemplate())),this._element}removeElement(){this._element=null}}).getElement(),b=document.querySelector(".main"),g=b.querySelector(".main__control");l(g,n,(new class{constructor(){this._element=null}getTemplate(){return'        \n    <section class="control__btn-wrap">\n        <input\n        type="radio"\n        name="control"\n        id="control__new-task"\n        class="control__input visually-hidden"\n        />\n        <label for="control__new-task" class="control__label control__label--new-task"\n        >+ ADD NEW TASK</label\n        >\n        <input\n        type="radio"\n        name="control"\n        id="control__task"\n        class="control__input visually-hidden"\n        checked\n        />\n        <label for="control__task" class="control__label">TASKS</label>\n        <input\n        type="radio"\n        name="control"\n        id="control__statistic"\n        class="control__input visually-hidden"\n        />\n        <label for="control__statistic" class="control__label"\n        >STATISTICS</label\n        >\n  </section>'}getElement(){return this._element||(this._element=a(this.getTemplate())),this._element}removeElement(){this._element=null}}).getElement()),l(b,n,new class{constructor(e){this._element=null,this._filter=e}getTemplate(){return`\n    <section class="main__filter filter container">\n      ${this._filter.map(((e,t)=>((e,t)=>{const{name:n,count:a}=e;return`\n    <input\n      type="radio"\n      id="filter__${n}"\n      class="filter__input visually-hidden"\n      name="filter"\n      ${t?"checked":""}\n    />\n    <label for="filter__all" class="filter__label">${n} \n      <span class="filter__${n}-count">${a}</span>\n    </label>\n  `})(e,0===t))).join("\n")}\n    </section>\n  `}getElement(){return this._element||(this._element=a(this.getTemplate())),this._element}removeElement(){this._element=null}}(["all","overdue","today","favorites","repeating","tags","archive"].map((e=>({name:e,count:Math.floor(10*Math.random())})))).getElement()),l(b,n,p.getElement());const f=b.querySelector(".board");l(f,n,v);const w=b.querySelector(".board__tasks"),y=document.querySelector(".load-more");let $=1;const E=e=>{const t=8*(e-1),a=t+8;m(20).slice(t,a).forEach((e=>l(w,n,new h(e).getElement())))};E($),y.addEventListener("click",(()=>{$++;const e=m(20).length-8*($-1);console.log(e),e>0?E($):y.remove()}))}();